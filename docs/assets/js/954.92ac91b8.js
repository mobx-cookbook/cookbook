"use strict";(self.webpackChunkmobx_cookbook=self.webpackChunkmobx_cookbook||[]).push([[954],{7954:(e,n,r)=>{r.r(n),r.d(n,{default:()=>s});const s="import React, { useState, useEffect } from 'react'\n\nconst readObservables = new Set()\n\nconst observable = (value) => ({\n  value,\n  listeners: new Set(),\n  get() {\n    readObservables.add(this)\n    return this.value\n  },\n  set(value) {\n    this.value = value\n    this.notify()\n  },\n  subscribe(listener) {\n    this.listeners.add(listener)\n  },\n  unsubscribe(listener) {\n    this.listeners.delete(listener)\n  },\n  notify() {\n    this.listeners.forEach((listener) => listener())\n  },\n})\n\nconst useRerender = () => {\n  const [, setValue] = useState([])\n  return () => setValue([])\n}\n\n// prettier-ignore\nconst observer = (component) => (...props) => {\n  const rerender = useRerender()\n  readObservables.clear()\n  const result = component(...props)\n\n  useEffect(() => {\n    readObservables.forEach((observable) => observable.subscribe(rerender))\n    return () => readObservables.forEach((observable) => observable.unsubscribe(rerender))\n  }, [])\n\n  return result\n}\n\nconst counter = observable(0)\n\nconst increment = () => {\n  counter.set(counter.get() + 1)\n}\n\nconst CounterView = observer(() => (\n  <button onClick={increment}>Clicked times: {counter.get()}</button>\n))\n\nexport default CounterView\n"}}]);