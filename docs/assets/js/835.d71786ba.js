"use strict";(self.webpackChunkmobx_cookbook=self.webpackChunkmobx_cookbook||[]).push([[835],{7835:(e,n,r)=>{r.r(n),r.d(n,{default:()=>s});const s="import React, { useState, useEffect } from 'react'\n\nconst observable = (value) => ({\n  value,\n  // Set, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 \u043a\u043e\u043b\u0431\u0435\u043a\u043e\u0432\n  observers: new Set(),\n  subscribe(observer) {\n    this.observers.add(observer)\n  },\n  unsubscribe(observer) {\n    this.observers.delete(observer)\n  },\n  get() {\n    return this.value\n  },\n  set(value) {\n    this.value = value\n    this.observers.forEach((notify) => notify())\n  },\n})\n\nconst title = observable('Mobx article')\nconst views = observable(10)\n\nconst useRerender = () => {\n  const [, setValue] = useState()\n  return () => setValue([])\n}\n\nconst Article = () => {\n  const rerender = useRerender()\n\n  useEffect(() => {\n    title.subscribe(rerender)\n    views.subscribe(rerender)\n\n    return () => {\n      title.unsubscribe(rerender)\n      views.unsubscribe(rerender)\n    }\n  }, [])\n\n  return (\n    <div>\n      Article title: {title.get()} Views: {views.get()}{' '}\n      <button\n        onClick={() => {\n          views.set(views.get() + 1)\n        }}\n      >\n        Increase views\n      </button>\n    </div>\n  )\n}\n\nexport default Article\n"}}]);